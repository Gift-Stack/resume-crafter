[{"C:\\Users\\HP\\Desktop\\resume-maker\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\resume-maker\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\resume-maker\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\navbar\\NavBar.js":"4","C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\layout\\Left.js":"5","C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\layout\\Right.js":"6","C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\Resume.js":"7","C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\educations\\Education.js":"8","C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\Experience.js":"9"},{"size":266,"mtime":1613822032999,"results":"10","hashOfConfig":"11"},{"size":23917,"mtime":1615228280182,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1734,"mtime":1615227349527,"results":"14","hashOfConfig":"11"},{"size":1777,"mtime":1615219902697,"results":"15","hashOfConfig":"11"},{"size":1528,"mtime":1617988263143,"results":"16","hashOfConfig":"11"},{"size":1338,"mtime":1614542869844,"results":"17","hashOfConfig":"11"},{"size":1383,"mtime":1613740182450,"results":"18","hashOfConfig":"11"},{"size":1345,"mtime":1613739880761,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mrlez8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\HP\\Desktop\\resume-maker\\src\\index.js",[],["41","42"],"C:\\Users\\HP\\Desktop\\resume-maker\\src\\App.js",["43"],"import './App.css';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { Education } from './Components/educations/Education';\nimport { Experience } from './Components/Experience';\n\nimport 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button } from 'react-bootstrap';\nimport { v4 as uuid } from 'uuid';\n\n// import Pdf from 'react-to-pdf';\nimport { PDFDownloadLink, PDFViewer, StyleSheet } from '@react-pdf/renderer';\nimport Resume from './Components/Resume';\n// const ref = createRef();\n\nfunction App() {\n  // General From States\n  const [name, setName] = useState('');\n  const [stack, setStack] = useState(' ');\n  const [address, setAddress] = useState(' ');\n  const [phone, setPhone] = useState(' ');\n  const [email, setEmail] = useState(' ');\n  const [educations, setEducations] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [language, setLanguage] = useState('');\n  const [experience, setExperience] = useState([]);\n  const [skills, setSkills] = useState([]);\n  const [skill, setSkill] = useState('');\n  const [link, setLink] = useState('');\n  const [showLink, setShowLink] = useState([]);\n\n  // Education Modal States\n  const [course, setCourse] = useState('');\n  const [degree, setDegree] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [checkbox, setCheckbox] = useState(false);\n\n  // Education Modal Handler\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShowModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n\n  const submitHandler = () => {};\n  const handleAddEducation = async () => {\n    setEducations([\n      ...educations,\n      {\n        id: uuid(),\n        course,\n        degree,\n        startDate,\n        endDate,\n        checkbox,\n      },\n    ]);\n\n    setCourse('');\n    setDegree('');\n    setStartDate('');\n    setEndDate('');\n    setCheckbox(false);\n    setShowModal(false);\n  };\n\n  // Handle delete education\n  const handleDeleteEducation = (id) => {\n    // const educationCopy = [...educations];\n    // educationCopy.filter((education) => education.id != id);\n    setEducations((prevEducation) => {\n      return prevEducation.filter((education) => education.id !== id);\n    });\n  };\n\n  const handleAddLanguage = () => {\n    if (language === '') {\n      alert('E be like sey na ment');\n    } else {\n      setLanguages([...languages, { id: uuid(), language }]);\n      setLanguage('');\n    }\n  };\n  // HandleLanguageDeletion\n  const HandleLanguageDelete = (id) => {\n    setLanguages((prevLanguages) =>\n      prevLanguages.filter((language) => language.id !== id)\n    );\n  };\n\n  // Experience Modal Classes\n  const [title, setTitle] = useState('');\n  const [employer, setEmployer] = useState('');\n  const [experienceStartDate, setExperienceStartDate] = useState('');\n  const [experienceEndDate, setExperienceEndDate] = useState('');\n  const [experienceCheckbox, setExperienceCheckbox] = useState(false);\n  const [jobDescription, setJobDescription] = useState('');\n\n  // Experience Modal Handler\n  const [showExperienceModal, setShowExperienceModal] = useState(false);\n  const handleShowExperienceModal = () => setShowExperienceModal(true);\n  const handleCloseExperienceModal = () => setShowExperienceModal(false);\n\n  const handleAddExperience = () => {\n    setExperience([\n      ...experience,\n      {\n        id: uuid(),\n        title,\n        employer,\n        experienceStartDate,\n        experienceEndDate,\n        experienceCheckbox,\n        jobDescription,\n      },\n    ]);\n    setTitle('');\n    setEmployer('');\n    setExperienceStartDate('');\n    setExperienceEndDate('');\n    setExperienceCheckbox(false);\n    setJobDescription('');\n    setShowExperienceModal(false);\n  };\n  // HandleExperienceDeletion\n  const handleDeleteExperience = (id) => {\n    setExperience((prevExperience) => {\n      return prevExperience.filter((experience) => experience.id !== id);\n    });\n  };\n\n  // Skills Handler\n  const handleAddSkill = () => {\n    if (skill === '') {\n      alert('I fit deck you oh');\n    } else {\n      setSkills([...skills, { id: uuid(), skill }]);\n      setSkill('');\n    }\n  };\n  // HandleSkillDeletion\n  const handleDeleteSkill = (id) =>\n    setSkills((prevSkills) => prevSkills.filter((skill) => skill.id !== id));\n\n  // Link Handler\n  const handleAddLink = () => {\n    setShowLink([...showLink, { id: uuid(), link }]);\n    setLink('');\n  };\n  // HandleLinkDeletion\n  const handleDeleteLink = (id) =>\n    setShowLink((prevLinks) => prevLinks.filter((link) => link.id !== id));\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path='/'\n          render={() => (\n            <div style={{ background: '#f4f4f4' }}>\n              <h3\n                className='text-white text-center py-3 '\n                style={{ background: '#003366' }}\n              >\n                Build Your Resume in 5mins\n              </h3>\n\n              <div className='container px-3'>\n                <div\n                  className='card my-5'\n                  style={{\n                    borderColor: '#003366',\n                    borderRadius: 10,\n                  }}\n                >\n                  <div className='card-body '>\n                    <div className='container'>\n                      <form className='my-3  form-group'>\n                        <input\n                          type='text'\n                          value={name}\n                          onChange={(e) => setName(e.target.value)}\n                          className='form-control mb-3'\n                          placeholder='Enter your full name'\n                          required\n                        />\n                        <input\n                          type='text'\n                          value={stack}\n                          onChange={(e) => setStack(e.target.value)}\n                          className='form-control mb-3'\n                          placeholder='Job?'\n                          required\n                        />\n                        <input\n                          type='text'\n                          value={address}\n                          onChange={(e) => setAddress(e.target.value)}\n                          className='form-control mb-3'\n                          placeholder='Enter your Address (City, State, Country)'\n                        />\n                        <input\n                          type='text'\n                          value={phone}\n                          onChange={(e) => setPhone(e.target.value)}\n                          className='form-control mb-3'\n                          placeholder='Enter your phone number'\n                        />\n                        <input\n                          type='text'\n                          value={email}\n                          onChange={(e) => setEmail(e.target.value)}\n                          className='form-control mb-3'\n                          placeholder='Enter your email '\n                        />\n\n                        {educations &&\n                          educations.map((edu) => (\n                            <Education\n                              key={edu.id}\n                              education={edu}\n                              handleDeleteEducation={handleDeleteEducation}\n                            />\n                          ))}\n                        <Button\n                          variant='none'\n                          className='btn mb-3 waves-effect waves-light '\n                          onClick={handleShowModal}\n                        >\n                          Add Education\n                          <span style={{ fontSize: '20px' }}> &#43; </span>\n                        </Button>\n\n                        <Modal show={showModal} onHide={handleCloseModal}>\n                          <Modal.Header closeButton>\n                            <Modal.Title>Add Education</Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            <input\n                              type='text'\n                              placeholder='Enter Course of Study'\n                              className='form-control mb-3'\n                              value={course}\n                              onChange={(e) => setCourse(e.target.value)}\n                            />\n                            <input\n                              type='text'\n                              placeholder='Enter Degree'\n                              className='form-control mb-3'\n                              value={degree}\n                              onChange={(e) => setDegree(e.target.value)}\n                            />\n                            <div className='d-flex justify-content-between mb-3'>\n                              <div className='start'>\n                                <input\n                                  type='month'\n                                  className='form-control'\n                                  value={startDate}\n                                  onChange={(e) => setStartDate(e.target.value)}\n                                />\n                              </div>\n                              <div className='end'>\n                                <input\n                                  type={checkbox ? 'text' : 'month'}\n                                  className='form-control '\n                                  value={checkbox ? 'Present' : endDate}\n                                  onChange={(e) => setEndDate(e.target.value)}\n                                />\n                              </div>\n                            </div>\n                            <input\n                              type='checkbox'\n                              className='checkbox'\n                              checked={checkbox}\n                              onChange={(e) => {\n                                setCheckbox(!checkbox);\n                                setEndDate('Present');\n                              }}\n                            />{' '}\n                            I currently school here\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <Button\n                              variant='secondary'\n                              onClick={handleCloseModal}\n                            >\n                              Close\n                            </Button>\n                            <Button\n                              style={{ background: '#003366' }}\n                              onClick={handleAddEducation}\n                            >\n                              Add\n                            </Button>\n                          </Modal.Footer>\n                        </Modal>\n                        <br />\n                        {languages &&\n                          languages.map((language) => (\n                            <div\n                              key={language.id}\n                              className='card py-1 px-4 my-3  flex-row justify-content-between align-items-center'\n                              style={{ display: 'inline-flex' }}\n                            >\n                              {language.language}\n                              <span\n                                className='pl-3 '\n                                style={{\n                                  fontSize: 23,\n                                  color: '#003366',\n                                  fontWeight: 'bold',\n                                  cursor: 'pointer',\n                                }}\n                                onClick={() =>\n                                  HandleLanguageDelete(language.id)\n                                }\n                              >\n                                &times;\n                              </span>\n                            </div>\n                          ))}\n                        <div className=' d-flex'>\n                          <input\n                            type='text'\n                            value={language}\n                            onChange={(e) => setLanguage(e.target.value)}\n                            className='form-control'\n                            placeholder='Languages Spoken...'\n                          />\n                          <input\n                            type='button'\n                            value='Add'\n                            className='btn '\n                            onClick={handleAddLanguage}\n                          />\n                        </div>\n                        <br />\n                        {experience &&\n                          experience.map((curExperience) => (\n                            <Experience\n                              key={curExperience.id}\n                              experience={curExperience}\n                              handleDeleteExperience={handleDeleteExperience}\n                            />\n                          ))}\n                        <Button\n                          variant='none'\n                          className='btn mb-3'\n                          onClick={handleShowExperienceModal}\n                        >\n                          Add Work Experience{' '}\n                          <span style={{ fontSize: '20px' }}> &#43; </span>\n                        </Button>\n\n                        <Modal\n                          show={showExperienceModal}\n                          onHide={handleCloseExperienceModal}\n                        >\n                          <Modal.Header closeButton>\n                            <Modal.Title>Work Experience</Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            <div className='d-flex justify-content-between'>\n                              <input\n                                type='text'\n                                placeholder='Job Title'\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                className='form-control mr-4'\n                              />\n                              <input\n                                type='text'\n                                placeholder='Employed at?'\n                                value={employer}\n                                onChange={(e) => setEmployer(e.target.value)}\n                                className='form-control ml-4'\n                              />\n                            </div>\n                            <br />\n                            <div className='d-flex justify-content-between'>\n                              <div className=' form-group'>\n                                <label className='text-muted'>Start Date</label>\n                                <input\n                                  type='month'\n                                  value={experienceStartDate}\n                                  onChange={(e) =>\n                                    setExperienceStartDate(e.target.value)\n                                  }\n                                  className='form-control'\n                                />\n                              </div>\n                              <div className='form-group'>\n                                <label className='text-muted'>End Date</label>\n                                <input\n                                  type={experienceCheckbox ? 'text' : 'month'}\n                                  value={\n                                    experienceCheckbox\n                                      ? 'Present'\n                                      : experienceEndDate\n                                  }\n                                  onChange={(e) =>\n                                    setExperienceEndDate(e.target.value)\n                                  }\n                                  className='form-control'\n                                />\n                              </div>\n                            </div>\n                            <input\n                              type='checkbox'\n                              checked={experienceCheckbox}\n                              onChange={(e) => {\n                                setExperienceCheckbox(!experienceCheckbox);\n                                setExperienceEndDate('Present');\n                              }}\n                              className='checkbox'\n                            />{' '}\n                            <span className='text-muted'>\n                              I currently work here\n                            </span>\n                            <br />\n                            <br />\n                            <textarea\n                              cols='30'\n                              rows='10'\n                              placeholder='Job Description. Feel free to brag about your position and what you do/did.'\n                              value={jobDescription}\n                              onChange={(e) =>\n                                setJobDescription(e.target.value)\n                              }\n                              className='form-control'\n                              style={{ height: 180 }}\n                            ></textarea>\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <Button\n                              style={{ background: '#003366' }}\n                              onClick={handleAddExperience}\n                            >\n                              Add\n                            </Button>\n                          </Modal.Footer>\n                        </Modal>\n                        <br />\n                        {skills &&\n                          skills.sort().map((skill) => (\n                            <div\n                              key={skill.id}\n                              className='card p-2 my-3 d-flex flex-row justify-content-between'\n                            >\n                              <div>{skill.skill}</div>\n                              <div onClick={() => handleDeleteSkill(skill.id)}>\n                                <svg\n                                  stroke='currentColor'\n                                  fill='currentColor'\n                                  strokeWidth='0'\n                                  viewBox='0 0 16 16'\n                                  height='1em'\n                                  width='1em'\n                                  xmlns='http://www.w3.org/2000/svg'\n                                >\n                                  <path d='M5.5 5.5A.5.5 0 016 6v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm2.5 0a.5.5 0 01.5.5v6a.5.5 0 01-1 0V6a.5.5 0 01.5-.5zm3 .5a.5.5 0 00-1 0v6a.5.5 0 001 0V6z'></path>\n                                  <path\n                                    fillRule='evenodd'\n                                    d='M14.5 3a1 1 0 01-1 1H13v9a2 2 0 01-2 2H5a2 2 0 01-2-2V4h-.5a1 1 0 01-1-1V2a1 1 0 011-1H6a1 1 0 011-1h2a1 1 0 011 1h3.5a1 1 0 011 1v1zM4.118 4L4 4.059V13a1 1 0 001 1h6a1 1 0 001-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\n                                    clipRule='evenodd'\n                                  ></path>\n                                </svg>\n                              </div>\n                            </div>\n                          ))}\n\n                        <div className=' d-flex '>\n                          <input\n                            type='text'\n                            value={skill}\n                            onChange={(e) => setSkill(e.target.value)}\n                            className='form-control'\n                            placeholder='Enter Relevant Skill...'\n                          />\n                          <input\n                            type='button'\n                            value='Add'\n                            className='btn '\n                            onClick={handleAddSkill}\n                          />\n                        </div>\n                        <br />\n                        {showLink &&\n                          showLink.map((link) => (\n                            <div\n                              key={link.id}\n                              className='card p-2 mb-3 mr-3 flex-row justify-content-between align-items-center'\n                              style={{ display: 'inline-flex' }}\n                            >\n                              {link.link}\n                              <span\n                                className='pl-3 '\n                                style={{\n                                  fontSize: 23,\n                                  color: '#003366',\n                                  fontWeight: 'bold',\n                                  cursor: 'pointer',\n                                }}\n                                onClick={() => handleDeleteLink(link.id)}\n                              >\n                                &times;\n                              </span>\n                            </div>\n                          ))}\n                        <div className='d-flex'>\n                          <input\n                            type='text'\n                            placeholder='E.g. link to website, portfolio or github repository'\n                            value={link}\n                            onChange={(e) => setLink(e.target.value)}\n                            className='form-control'\n                          />\n                          <input\n                            type='button'\n                            value='Add Link'\n                            onClick={handleAddLink}\n                            className='btn'\n                          />\n                        </div>\n                        <br />\n                        <Link\n                          to='/resume'\n                          className='btn btn-block text-white'\n                          onClick={submitHandler}\n                          style={{ background: '#003366' }}\n                        >\n                          Submit\n                        </Link>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        />\n        <Route\n          exact\n          path='/resume'\n          render={() => (\n            <>\n              <h2 className='text-muted px-3 mt-4'>Check it out...</h2>\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 10,\n                  right: 10,\n                  height: '70%',\n                }}\n              >\n                <PDFViewer style={styles.PDFViewer}>\n                  <Resume\n                    name={name}\n                    stack={stack}\n                    address={address}\n                    phone={phone}\n                    email={email}\n                    educations={educations}\n                    languages={languages}\n                    showLink={showLink}\n                    experience={experience}\n                    skills={skills}\n                  />\n                </PDFViewer>\n              </div>\n            </>\n          )}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nconst styles = StyleSheet.create({\n  PDFViewer: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n    fontFamily:\n      \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\n  },\n});\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\resume-maker\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\navbar\\NavBar.js",[],"C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\layout\\Left.js",["44"],"import React from 'react';\r\nimport { View, Text, Link, Stylesheet } from '@react-pdf/renderer';\r\n\r\nexport const Left = ({ education, languages, links }) => {\r\n  return (\r\n    <View className='container'>\r\n      <Text className='h4 pt-4'>EDUCATION</Text>\r\n      <View style={{ borderBottomWidth: 2 }} />\r\n      <View>\r\n        {education.map((cur) => (\r\n          <View key={cur.id} className='pb-2'>\r\n            <Text className='h6' style={{ textTransform: 'uppercase' }}>\r\n              {cur.degree}\r\n            </Text>\r\n            <View\r\n              className='p'\r\n              style={{\r\n                color: '#b29700',\r\n                fontWeight: 'bold',\r\n                fontStyle: 'italic',\r\n              }}\r\n            >\r\n              <Text>{cur.course}</Text>\r\n              <Text>\r\n                ({cur.startDate} till {cur.endDate})\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={{ height: 20 }} />\r\n      <Text className='h4'>LANGUAGES</Text>\r\n      <View style={{ borderBottomWidth: 2 }} />\r\n      {languages.map((language) => (\r\n        <Text\r\n          key={language.id}\r\n          style={{ color: '#b29700', fontSize: 20, fontWeight: 'bold' }}\r\n        >\r\n          - {language.language} -\r\n        </Text>\r\n      ))}\r\n      <View style={{ height: 20 }} />\r\n      <Text className='h4'>LINKS</Text>\r\n      <View style={{ borderBottomWidth: 2 }} />\r\n      {links.map((link) => (\r\n        <View className='list-unstyled list'>\r\n          <Link\r\n            style={{ color: '#b29700' }}\r\n            src={`${link.link}`}\r\n            target='_blank'\r\n            className='link '\r\n          >\r\n            {link.link}\r\n          </Link>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n","C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\layout\\Right.js",["45","46"],"C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\Resume.js",[],"C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\educations\\Education.js",[],"C:\\Users\\HP\\Desktop\\resume-maker\\src\\Components\\Experience.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":15,"column":10,"nodeType":"53","messageId":"54","endLine":15,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":2,"column":28,"nodeType":"53","messageId":"54","endLine":2,"endColumn":38},{"ruleId":"51","severity":1,"message":"56","line":2,"column":22,"nodeType":"53","messageId":"54","endLine":2,"endColumn":26},{"ruleId":"51","severity":1,"message":"55","line":2,"column":28,"nodeType":"53","messageId":"54","endLine":2,"endColumn":38},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'PDFDownloadLink' is defined but never used.","Identifier","unusedVar","'Stylesheet' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]